#spring.cloud.config.label 指明远程仓库的分支
#spring.cloud.config.uri= http://localhost:8888/ 指明配置服务中心的网址
#spring.cloud.config.profile
#
#  dev开发环境配置文件
#  test测试环境
#  pro正式环境



#bootstrap与application
#
#1.加载顺序
#
#这里主要是说明application和bootstrap的加载顺序。
#
#bootstrap.yml（bootstrap.properties）先加载
#application.yml（application.properties）后加载
#bootstrap.yml 用于应用程序上下文的引导阶段。
#
#bootstrap.yml 由父Spring ApplicationContext加载。
#
#父ApplicationContext 被加载到使用 application.yml 的之前。
#
#2.配置区别
#
#bootstrap.yml 和application.yml 都可以用来配置参数。
#
#bootstrap.yml 可以理解成系统级别的一些参数配置，这些参数一般是不会变动的。
#application.yml 可以用来定义应用级别的，如果搭配 spring-cloud-config 使用 application.yml 里面定义的文件可以实现动态替换。


#spring.cloud.config.discovery.enabled 是从配置中心读取文件。
#spring.cloud.config.discovery.serviceId 配置中心的servieId，即服务名。

#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
# spring.rabbitmq.username=
# spring.rabbitmq.password=

server:
  port: 8882

spring:
  application:
    name: config-client
  cloud:
    config:
      label: master
      profile: dev
#      uri: http://localhost:8888/
      discovery:
          enabled: true
          serviceId: config-server
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin

management:
  security:
    enabled: false

eureka:
  client:
    serviceUrl:
      defaultZone: http://root:root@localhost:8889/eureka/
